<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fpo.mapper.QuoteHeaderMapper" >
  <resultMap id="BaseResultMap" type="com.fpo.model.QuoteHeader" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_header_id" property="orderHeaderId" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="contact_info" property="contactInfo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from fpo_quote_header
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fpo.model.QuoteHeader" useGeneratedKeys="true" keyProperty="id">
    insert into fpo_quote_header (id, order_header_id, remark, 
      company_name, contact, contact_info, 
      status, user_id, create_date, 
      update_date)
    values (#{id,jdbcType=BIGINT}, #{orderHeaderId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{companyName,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{contactInfo,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{userId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fpo.model.QuoteHeader" >
    update fpo_quote_header
    set order_header_id = #{orderHeaderId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      contact_info = #{contactInfo,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, order_header_id, remark, company_name, contact, contact_info, status, 
    user_id, create_date, update_date
    from fpo_quote_header
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, order_header_id, remark, company_name, contact, contact_info, status, 
    user_id, create_date, update_date
    from fpo_quote_header
  </select>

  <!--根据条件查询报价列表-->
  <select id="queryByCondition" resultType="com.fpo.model.QuoteParam">
    SELECT
    a.id AS id, a.order_header_id AS orderHeaderId, a.remark AS remark, a.company_name AS companyName,
    a.contact AS contact, a.contact_info AS contactInfo,
    IF(a.update_date = NULL, a.create_date, a.update_date) AS quoteTime,
    SUM(b.unit_price * b.supply_quantity) AS totalPrice,
    c.title AS orderTitle, c.company_name AS orderCompanyName,
    c.contact AS orderContact, c.contact_info AS orderContactInfo,
    (e.firstQuoteTotalPrice-SUM(b.unit_price * b.supply_quantity))/e.firstQuoteTotalPrice AS `percent`,
    IF(e.quoteCount IS NULL, 0, e.quoteCount) AS quoteCount, e.allQuotePriceStr
    FROM fpo_quote_header AS a
    LEFT JOIN fpo_quote_details AS b ON a.id = b.header_id AND b.status = 1
    LEFT JOIN fpo_order_header AS c ON a.order_header_id = c.id
    LEFT JOIN (
      SELECT COUNT(1) AS quoteCount, firstQuoteTotalPrice, header_id,
      GROUP_CONCAT(firstQuoteTotalPrice ORDER BY create_date asc) as allQuotePriceStr
      FROM(
        SELECT header_id, create_date, SUM(supply_quantity * unit_price) as firstQuoteTotalPrice
        FROM fpo_quote_detail_histories GROUP BY header_id, create_date ORDER BY create_date ASC
      )as tmp GROUP BY header_id
    ) e ON a.id = e.header_id
    <where>
        <if test="userId != null and userId != ''">
            AND a.user_id = #{userId}
        </if>
        <if test="orderHeaderId != null and orderHeaderId != ''">
            AND a.order_header_id = #{orderHeaderId}
        </if>
    </where>
    <if test="orderBy != null and orderColumn != null">
        ORDER BY #{orderBy} #{orderColumn}
    </if>
    GROUP BY a.id
  </select>

  <select id="getQuoteInfoList" resultMap="Result_QuoteInfo">
     select t1.id, t1.order_header_id, t1.remark, t1.company_name, t1.contact, t1.contact_info, t1.status,
          t1.user_id, t1.create_date, t1.update_date, t2.order_detail_id, t2.unit_price, t2.supply_quantity
    from fpo_quote_header as t1, fpo_quote_details t2
    WHERE t1.id = t2.header_id and t1.order_header_id = #{orderId} and t2.status = 1
  </select>

  <resultMap id="Result_QuoteInfo" type="com.fpo.model.QuoteParam">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_header_id" property="orderHeaderId" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="contact_info" property="contactInfo" jdbcType="VARCHAR" />

    <collection property="details" column="id" ofType="com.fpo.model.QuoteDetailsParam">
      <result column="header_id" property="headerId" jdbcType="BIGINT"/>
      <result column="order_detail_id" property="orderDetailId" jdbcType="VARCHAR" />
      <result column="unit_price" property="unitPrice" jdbcType="VARCHAR" />
      <result column="supply_quantity" property="supplyQuantity" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
</mapper>